{"version":3,"sources":["validate.js"],"names":["jwt","require","validate","req","res","next","token","decoded","regeneratorRuntime","async","_context","prev","cookies","console","log","abrupt","status","send","error","user","err","stop"],"mappings":"aACA,IAAMA,IAAMC,QAAQ,gBAEdC,SAAW,SAAOC,EAAKC,EAAKC,GAAjB,IAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAL,MAAA,KAAA,EAAA,GAAXH,EAAWC,EAAAS,QAAXV,MAAWW,QAAAC,IAAAR,GAAAA,EAAA,CAAAI,EAAAL,KAAA,EAAA,MAAA,OAAAK,EAAAK,OAAA,SAAAX,EAAAY,OAAA,KAAAC,KAAA,CAAAC,MAAA,uCAAA,KAAA,EACPZ,IACNO,EAAQC,IAAIR,OAAZA,EAAA,cAOAH,EAAIgB,KAAOZ,EATEF,IAAA,MAAAe,GAAAhB,EAAAY,OAAA,KAAAC,KAAA,CAAAC,MAAA,mBAAA,KAAA,EAAA,IAAA,MAAA,OAAAR,EAAAW,WAIiBH,OAAAA,QAAKhB","file":"validate.min.js","sourcesContent":["\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nconst validate = async (req, res, next) => {\r\n    const token = req.cookies.token;\r\n    console.log(token)\r\n  if (!token) {\r\n    return res.status(401).send({ error: 'Access denied. No token provided.' });\r\n  }\r\n\r\n  try {\r\n    const decoded = jwt.verify(token, 'Guruprasad'); // Replace 'your_secret_key' with your actual secret key\r\n    req.user = decoded;\r\n    next();\r\n  } catch (err) {\r\n    res.status(400).send({ error: 'Invalid token.' });\r\n  }\r\n}\r\n\r\nmodule.exports = validate;"]}